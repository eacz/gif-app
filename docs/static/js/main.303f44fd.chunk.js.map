{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/CategoryItem.js","components/Category.js","hooks/useFetchGifs.js","GifApp.js","index.js"],"names":["AddCategory","setCategories","useState","category","setCategory","onSubmit","e","preventDefault","categories","htmlFor","type","name","id","value","placeholder","onChange","target","getGifs","a","url","encodeURI","fetch","res","json","data","gifs","map","gif","title","images","downsized_medium","CategoryItem","className","src","alt","Category","loading","state","setState","useEffect","then","useFetchGifs","key","GifApp","ReactDOM","render","document","getElementById"],"mappings":"qMAsCeA,EAnCK,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EACPC,mBAAS,IADF,mBAChCC,EADgC,KACtBC,EADsB,KAgBvC,OACI,0BAAMC,SAVW,SAACC,GAClBA,EAAEC,iBACGJ,IAGLF,GAAc,SAACO,GAAD,OAAiBL,GAAjB,mBAA8BK,OAC5CJ,EAAY,OAKR,2BAAOK,QAAQ,QAAf,QACA,2BACIC,KAAK,OACLC,KAAK,OACLC,GAAG,OACHC,MAAOV,EACPW,YAAY,OACZC,SAtBS,SAACT,GAClBF,EAAYE,EAAEU,OAAOH,Y,uBCPhBI,EAAO,uCAAG,WAAOd,GAAP,uBAAAe,EAAA,4DACJ,mCACTC,EAFa,uDACJ,mCADI,cAEqDC,UAAUjB,GAF/D,sBAGDkB,MAAMF,GAHL,cAGbG,EAHa,gBAIIA,EAAIC,OAJR,uBAIXC,EAJW,EAIXA,KAEFC,EAAOD,EAAKE,KAAI,SAACC,GAAD,YAAU,CAC5Bf,GAAIe,EAAIf,GACRgB,MAAOD,EAAIC,MACXT,IAAG,UAAEQ,EAAIE,cAAN,aAAE,EAAYC,iBAAiBX,QATnB,kBAYZM,GAZY,4CAAH,sDCWLM,EATM,SAAC,GAAoB,IAAlBZ,EAAiB,EAAjBA,IAAKS,EAAY,EAAZA,MACzB,OACI,yBAAKI,UAAU,0CACX,yBAAKC,IAAKd,EAAKe,IAAKN,MCoBjBO,EApBE,SAAC,GAAkB,IAAhBhC,EAAe,EAAfA,SAAe,ECFP,SAACA,GAAc,IAAD,EACZD,mBAAS,CAC/BsB,KAAM,GACNY,SAAS,IAHyB,mBAC/BC,EAD+B,KACxBC,EADwB,KAYtC,OANAC,qBAAU,WACNtB,EAAQd,GAAUqC,MAAK,SAACf,GAAD,OACnBa,EAAS,CAACd,KAAMC,EAAOW,SAAS,SAErC,CAACjC,IAEGkC,EDTyBI,CAAatC,GAA/BsB,EADiB,EACvBD,KAAYY,EADW,EACXA,QAEpB,OACI,oCACI,wBAAIJ,UAAU,qCAAqC7B,GAClDiC,GAAW,uBAAGJ,UAAU,oCAAb,cACZ,yBAAKA,UAAU,kBACVP,EAAKC,KAAI,SAACC,GAAD,OACN,kBAAC,EAAD,eAAce,IAAKf,EAAIf,IAAQe,UEQpCgB,EAlBA,WAAO,IAAD,EACmBzC,mBAAS,CAAC,WAD7B,mBACVM,EADU,KACEP,EADF,KAGjB,OACI,oCACI,sCACA,kBAAC,EAAD,CAAaA,cAAeA,IAC5B,6BAEA,4BACKO,EAAWkB,KAAI,SAACvB,GAAD,OACZ,kBAAC,EAAD,CAAUuC,IAAKvC,EAAUA,SAAUA,UCVvDyC,IAASC,OAAO,kBAAC,EAAD,MAAYC,SAASC,eAAe,U","file":"static/js/main.303f44fd.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst AddCategory = ({ setCategories }) => {\r\n    const [category, setCategory] = useState('');\r\n\r\n    const handleChange = (e) => {\r\n        setCategory(e.target.value);\r\n    };\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        if (!category) {\r\n            return;\r\n        }\r\n        setCategories((categories) => [category, ...categories]);\r\n        setCategory('');\r\n    };\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <label htmlFor=\"name\">Name</label>\r\n            <input\r\n                type=\"text\"\r\n                name=\"name\"\r\n                id=\"name\"\r\n                value={category}\r\n                placeholder=\"Name\"\r\n                onChange={handleChange}\r\n            />\r\n        </form>\r\n    );\r\n};\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default AddCategory;\r\n","export const getGifs = async (category) => {\r\n    const apiKey = '7Q6AJRVzL0zg38gCvD0SgdJmVCitOo1u';\r\n    const url = `https://api.giphy.com/v1/gifs/search?api_key=${apiKey}&q=${encodeURI(category)}&limit=10`;\r\n    const res = await fetch(url);\r\n    const { data } = await res.json();\r\n\r\n    const gifs = data.map((gif) => ({\r\n        id: gif.id,\r\n        title: gif.title,\r\n        url: gif.images?.downsized_medium.url,\r\n    }));\r\n\r\n    return gifs;\r\n}","import React from 'react';\r\n\r\nconst CategoryItem = ({ url, title }) => {\r\n    return (\r\n        <div className=\"card animate__animated animate__fadeIn\">\r\n            <img src={url} alt={title} />\r\n        </div>\r\n    );\r\n};\r\n\r\n\r\nexport default CategoryItem;\r\n","import React from 'react';\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\nimport PropTypes from 'prop-types';\r\nimport CategoryItem from './CategoryItem';\r\n\r\nconst Category = ({ category }) => {\r\n    const { data: gifs, loading } = useFetchGifs(category);\r\n\r\n    return (\r\n        <>\r\n            <h3 className=\"animate__animated animate__bounce\">{category}</h3>\r\n            {loading && <p className=\"animate__animated animate__flash\">Loading...</p>}\r\n            <div className=\"card-container\">\r\n                {gifs.map((gif) => (\r\n                    <CategoryItem key={gif.id} {...gif} />\r\n                ))}\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nCategory.propTypes = {\r\n    category: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Category;\r\n","import { useState, useEffect } from 'react';\r\nimport { getGifs } from '../helpers/getGifs';\r\n\r\nexport const useFetchGifs = (category) => {\r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true,\r\n    });\r\n\r\n    useEffect(() => {\r\n        getGifs(category).then((gifs) =>\r\n            setState({data: gifs , loading: false })\r\n        );\r\n    }, [category]);\r\n\r\n    return state;\r\n};\r\n","import React, { useState } from 'react';\r\nimport AddCategory from './components/AddCategory';\r\nimport Category from './components/Category';\r\n\r\nconst GifApp = () => {\r\n    const [categories, setCategories] = useState(['Naruto']);\r\n\r\n    return (\r\n        <>\r\n            <h2>GifApp</h2>\r\n            <AddCategory setCategories={setCategories} />\r\n            <hr />\r\n\r\n            <ol>\r\n                {categories.map((category) => (\r\n                    <Category key={category} category={category} />\r\n                ))}\r\n            </ol>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default GifApp;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport GifApp from './GifApp';\n\nReactDOM.render(<GifApp />, document.getElementById('root'));\n\n "],"sourceRoot":""}